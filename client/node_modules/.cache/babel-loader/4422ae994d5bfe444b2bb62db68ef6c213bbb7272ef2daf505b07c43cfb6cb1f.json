{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Documents/blob-fight/client/src/CreatureImage.js\",\n  _s = $RefreshSig$();\nimport game_data from \"./game_data.json\";\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreatureImg(props) {\n  _s();\n  const [path, setPath] = useState(generator(50, props.name.length * 5, props.name.length * 5).path);\n  const [color1, setColor1] = useState(random_rgba());\n  const [color2, setColor2] = useState(random_rgba());\n  console.log(props);\n  console.log(game_data);\n  console.log(game_data.creatures[props.name]);\n  console.log(generator().path);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    transform: props.right ? \"scale(-1,1)\" : \"scale(1,1)\",\n    width: \"200px\",\n    height: \"200px\",\n    id: \"sw-js-blob-svg\",\n    viewBox: \"0 0 100 100\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    version: \"1.1\",\n    children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n      children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n        id: \"sw-gradient\" + props.name,\n        x1: \"0\",\n        x2: \"1\",\n        y1: \"1\",\n        y2: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n          id: \"stop1\",\n          stopColor: game_data.creatures[props.name].color1,\n          offset: \"0%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n          id: \"stop2\",\n          stopColor: game_data.creatures[props.name].color2,\n          offset: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      fill: \"url(#sw-gradient\" + props.name + \")\",\n      d: game_data.creatures[props.name].path.path,\n      transform: \"translate(50 50)\",\n      strokeWidth: \"1\",\n      stroke: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"30\",\n      cy: \"40\",\n      r: \"5\",\n      stroke: \"black\",\n      \"stroke-width\": \"1\",\n      fill: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"50\",\n      cy: \"40\",\n      r: \"5\",\n      stroke: \"black\",\n      \"stroke-width\": \"1\",\n      fill: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"28\",\n      cy: \"40\",\n      r: \"2\",\n      stroke: \"black\",\n      \"stroke-width\": \"1\",\n      fill: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"48\",\n      cy: \"40\",\n      r: \"2\",\n      stroke: \"black\",\n      \"stroke-width\": \"1\",\n      fill: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatureImg, \"VO4H70e5D3vaK4XwDf6bnxYbDrA=\");\n_c = CreatureImg;\nexport default CreatureImg;\nvar _c;\n$RefreshReg$(_c, \"CreatureImg\");","map":{"version":3,"names":["game_data","React","useState","CreatureImg","props","path","setPath","generator","name","length","color1","setColor1","random_rgba","color2","setColor2","console","log","creatures","right"],"sources":["/Users/anna/Documents/blob-fight/client/src/CreatureImage.js"],"sourcesContent":["import game_data from \"./game_data.json\";\nimport './App.css';\nimport React, { useState } from 'react';\n\n\n\nfunction CreatureImg(props) {\n\n  const [path, setPath] = useState(generator(50, props.name.length*5, props.name.length*5).path);\n  const [color1, setColor1] = useState(random_rgba());\n  const [color2, setColor2] = useState(random_rgba());\n\n\n  console.log(props);\n  console.log(game_data);\n  console.log(game_data.creatures[props.name]);\n\n  console.log(generator().path);\n  return (\n    <svg transform = {props.right ? \"scale(-1,1)\" : \"scale(1,1)\"} width = \"200px\" height = \"200px\" id=\"sw-js-blob-svg\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n      <defs>                         \n        <linearGradient id={\"sw-gradient\"+props.name} x1=\"0\" x2=\"1\" y1=\"1\" y2=\"0\"> \n        <stop id=\"stop1\" stopColor={game_data.creatures[props.name].color1} offset=\"0%\"></stop>  \n        <stop id=\"stop2\" stopColor={game_data.creatures[props.name].color2} offset=\"100%\"></stop>\n        </linearGradient>\n      </defs>                \n      <path fill={\"url(#sw-gradient\"+props.name+\")\"} d={game_data.creatures[props.name].path.path} transform=\"translate(50 50)\" strokeWidth=\"1\" stroke=\"black\"></path>\n      <circle cx=\"30\" cy=\"40\" r=\"5\" stroke=\"black\" stroke-width=\"1\" fill=\"white\" />\n      <circle cx=\"50\" cy=\"40\" r=\"5\" stroke=\"black\" stroke-width=\"1\" fill=\"white\" />\n      <circle cx=\"28\" cy=\"40\" r=\"2\" stroke=\"black\" stroke-width=\"1\" fill=\"black\" />\n      <circle cx=\"48\" cy=\"40\" r=\"2\" stroke=\"black\" stroke-width=\"1\" fill=\"black\" />\n\n  </svg>\n  );\n}\n\nexport default CreatureImg;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}