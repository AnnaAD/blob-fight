{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Documents/blob-fight/client/src/Menu.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport CreatureImg from './CreatureImage';\nimport { socket } from './socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Menu(props) {\n  _s();\n  const [game_data, setData] = React.useState(null);\n  const [waiting, setWaiting] = React.useState(false);\n  function reqGame(name) {\n    let msg = {\n      \"name\": name,\n      \"socket\": props.socket.id\n    };\n    fetch('/join_game', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(msg)\n    }).then(res => {\n      setWaiting(res);\n    });\n  }\n  socket.on(\"startGame\", msg => {\n    props.setGame(msg);\n  });\n  React.useEffect(() => {\n    fetch(\"/blobs\").then(res => res.json()).then(data => setData(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" blob fight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" choose your blob\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: waiting ? \"Waiting for partner....\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: game_data ? Object.keys(game_data.creatures).map(creature => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              reqGame(creature);\n            },\n            class: \"icon\",\n            children: [/*#__PURE__*/_jsxDEV(CreatureImg, {\n              name: creature,\n              game_data: creature\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: creature\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this);\n        }) : \"Loading...\"\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Menu, \"O1IePwklOqxUhzw2NSWdK9h2vEo=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useState","useEffect","CreatureImg","socket","Menu","props","game_data","setData","waiting","setWaiting","reqGame","name","msg","id","fetch","method","headers","body","JSON","stringify","then","res","on","setGame","json","data","Object","keys","creatures","map","creature"],"sources":["/Users/anna/Documents/blob-fight/client/src/Menu.js"],"sourcesContent":["\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport CreatureImg from './CreatureImage';\n\n\nimport { socket } from './socket';\n\nfunction Menu(props) {\n\n  const [game_data, setData] = React.useState(null);\n  const [waiting, setWaiting] = React.useState(false);\n\n  \n  function reqGame(name) {\n    let msg = {\n      \"name\": name,\n      \"socket\": props.socket.id\n     };\n    fetch('/join_game', {\n      method: 'post',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify(msg)\n     }).then((res) => {\n      setWaiting(res);\n     })\n  }\n\n  socket.on(\"startGame\", (msg) => {\n    props.setGame(msg);\n  });\n\n  React.useEffect(() => {\n    fetch(\"/blobs\")\n      .then((res) => res.json())\n      .then((data) => setData(data));\n  }, []);\n\n\n  return (\n    <>\n    <h1> blob fight</h1>\n    <p> choose your blob</p>\n    <div className=\"App\">\n      {waiting ? \"Waiting for partner....\" :\n      <>\n       {game_data ? Object.keys(game_data.creatures).map((creature) => {\n          return (<button onClick = {() => {reqGame(creature)}}class = \"icon\">\n            <CreatureImg  name = {creature} game_data = {creature}/> <p>{creature}</p></button>);\n        }) : \"Loading...\"}\n      </>\n        \n      }\n      \n    </div>\n    </>\n  );\n}\n\nexport default Menu;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,iBAAiB;AAGzC,SAASC,MAAM,QAAQ,UAAU;AAAC;AAAA;AAElC,SAASC,IAAI,CAACC,KAAK,EAAE;EAAA;EAEnB,MAAM,CAACC,SAAS,EAAEC,OAAO,CAAC,GAAGR,KAAK,CAACC,QAAQ,CAAC,IAAI,CAAC;EACjD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGV,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;EAGnD,SAASU,OAAO,CAACC,IAAI,EAAE;IACrB,IAAIC,GAAG,GAAG;MACR,MAAM,EAAED,IAAI;MACZ,QAAQ,EAAEN,KAAK,CAACF,MAAM,CAACU;IACxB,CAAC;IACFC,KAAK,CAAC,YAAY,EAAE;MAClBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAC;MAAkB,CAAC;MAC5CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,GAAG;IACzB,CAAC,CAAC,CAACQ,IAAI,CAAEC,GAAG,IAAK;MAChBZ,UAAU,CAACY,GAAG,CAAC;IAChB,CAAC,CAAC;EACL;EAEAlB,MAAM,CAACmB,EAAE,CAAC,WAAW,EAAGV,GAAG,IAAK;IAC9BP,KAAK,CAACkB,OAAO,CAACX,GAAG,CAAC;EACpB,CAAC,CAAC;EAEFb,KAAK,CAACE,SAAS,CAAC,MAAM;IACpBa,KAAK,CAAC,QAAQ,CAAC,CACZM,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACG,IAAI,EAAE,CAAC,CACzBJ,IAAI,CAAEK,IAAI,IAAKlB,OAAO,CAACkB,IAAI,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAGN,oBACE;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eACpB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB,eACxB;MAAK,SAAS,EAAC,KAAK;MAAA,UACjBjB,OAAO,GAAG,yBAAyB,gBACpC;QAAA,UACEF,SAAS,GAAGoB,MAAM,CAACC,IAAI,CAACrB,SAAS,CAACsB,SAAS,CAAC,CAACC,GAAG,CAAEC,QAAQ,IAAK;UAC7D,oBAAQ;YAAQ,OAAO,EAAI,MAAM;cAACpB,OAAO,CAACoB,QAAQ,CAAC;YAAA,CAAE;YAAA,KAAK,EAAG,MAAM;YAAA,wBACjE,QAAC,WAAW;cAAE,IAAI,EAAIA,QAAS;cAAC,SAAS,EAAIA;YAAS;cAAA;cAAA;cAAA;YAAA,QAAE,oBAAC;cAAA,UAAIA;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA;YAAA;YAAA;YAAA;UAAA,QAAS;QACvF,CAAC,CAAC,GAAG;MAAY;IAChB;MAAA;MAAA;MAAA;IAAA,QAIC;EAAA,gBACH;AAEP;AAAC,GAjDQ1B,IAAI;AAAA,KAAJA,IAAI;AAmDb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}