{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Documents/blob-fight/client/src/App.js\",\n  _s = $RefreshSig$();\nimport Creature from './Creature';\nimport EnemyCreature from './EnemyCreature';\nimport './App.css';\nimport React, { useState } from 'react';\nimport game_data from \"./game_data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const [turn, setTurn] = useState(0);\n  const [myCreature, setCreature] = useState(game_data.creatures[\"erik\"]);\n  const [enemyCreature, setEnemyCreature] = useState(game_data.creatures[\"bobby\"]);\n  const [lastAction, setLastAction] = useState(\"Let the game begin!\");\n  function doTurn(moveName) {\n    if (enemyCreature.speed < myCreature.speed) {\n      makeMove(moveName, true);\n      makeMove(enemyCreature.moves[Math.floor(Math.random() * enemyCreature.moves.length)], false);\n    } else {\n      makeMove(enemyCreature.moves[Math.floor(Math.random() * enemyCreature.moves.length)], false);\n      makeMove(moveName, true);\n    }\n    setTurn(turn + 1);\n  }\n  function XOR(a, b) {\n    return (a || b) && !(a && b);\n  }\n  function makeMove(moveName, myMove) {\n    console.log(moveName, myMove);\n    let move = game_data.moves[moveName];\n    if (myMove) {\n      setLastAction(lastAction + \" \" + myCreature.name + \" performed \" + move.display_name);\n    } else {\n      setLastAction(lastAction + \" \" + enemyCreature.name + \" performed \" + move.display_name);\n    }\n    let target = XOR(myMove, move.effect.targetEnemy) ? myCreature : enemyCreature;\n    let changeFunc = XOR(myMove, move.effect.targetEnemy) ? setCreature : setEnemyCreature;\n    Object.keys(move.effect).forEach(key => {\n      if (key != \"targetEnemy\") {\n        changeFunc({\n          ...target,\n          [key]: target[key] + move.effect[key]\n        });\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" blob fight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: lastAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Turn : \", turn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(EnemyCreature, {\n        data: enemyCreature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Creature, {\n        doTurn: doTurn,\n        data: myCreature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"lan3E2TES5pVPI5+KtlnLaNq1xI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Creature","EnemyCreature","React","useState","game_data","App","props","turn","setTurn","myCreature","setCreature","creatures","enemyCreature","setEnemyCreature","lastAction","setLastAction","doTurn","moveName","speed","makeMove","moves","Math","floor","random","length","XOR","a","b","myMove","console","log","move","name","display_name","target","effect","targetEnemy","changeFunc","Object","keys","forEach","key"],"sources":["/Users/anna/Documents/blob-fight/client/src/App.js"],"sourcesContent":["import Creature from './Creature';\nimport EnemyCreature from './EnemyCreature';\nimport './App.css';\nimport React, { useState } from 'react';\nimport game_data from \"./game_data.json\";\n\nfunction App(props) {\n\n  const [turn, setTurn] = useState(0);\n  const [myCreature, setCreature] = useState(game_data.creatures[\"erik\"]);\n  const [enemyCreature, setEnemyCreature] = useState(game_data.creatures[\"bobby\"]);\n\n  const [lastAction, setLastAction] = useState(\"Let the game begin!\");\n\n  function doTurn(moveName) {\n    if(enemyCreature.speed < myCreature.speed) {\n      makeMove(moveName, true);\n      makeMove(enemyCreature.moves[Math.floor(Math.random()*enemyCreature.moves.length)], false);\n    } else {\n      makeMove(enemyCreature.moves[Math.floor(Math.random()*enemyCreature.moves.length)], false);\n      makeMove(moveName, true);\n    }\n    setTurn(turn + 1);\n  }\n\n  function XOR(a,b) {\n    return ( a || b ) && !( a && b );\n  }\n\n  function makeMove(moveName, myMove) {\n    console.log(moveName, myMove);\n    let move = game_data.moves[moveName];\n    if(myMove) {\n      setLastAction(lastAction + \" \" + myCreature.name + \" performed \" + move.display_name);\n    } else {\n      setLastAction(lastAction + \" \" + enemyCreature.name + \" performed \" + move.display_name);\n    }\n    let target = XOR(myMove,move.effect.targetEnemy) ? myCreature : enemyCreature;\n    let changeFunc =  XOR(myMove,move.effect.targetEnemy) ? setCreature : setEnemyCreature;\n\n    Object.keys(move.effect).forEach((key) => {\n      if(key != \"targetEnemy\") {\n        changeFunc({...target, [key] : target[key] + move.effect[key]})\n      }\n    });\n  }\n\n\n  return (\n    <>\n    <h1> blob fight</h1>\n    <p>{lastAction}</p>\n    <p> Turn : {turn}</p>\n    <div className=\"App\">\n      <EnemyCreature data = {enemyCreature}/>\n      <Creature doTurn = {doTurn} data = {myCreature}/>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}