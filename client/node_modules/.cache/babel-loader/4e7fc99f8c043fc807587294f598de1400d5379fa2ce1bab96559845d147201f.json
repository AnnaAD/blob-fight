{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Documents/blob-fight/src/CreatureImage.js\",\n  _s = $RefreshSig$();\nimport game_data from \"./game_data.json\";\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction random_rgba() {\n  var o = Math.round,\n    r = Math.random,\n    s = 255;\n  return 'rgba(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + r().toFixed(1) + ')';\n}\nconst generator = function () {\n  let {\n    size = 50,\n    growth = 2,\n    edges = 4,\n    seed = null\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var {\n    destPoints,\n    seedValue\n  } = _createPoints(size, growth, edges, seed);\n  var path = _createSvgPath(destPoints);\n  return {\n    path,\n    seedValue\n  };\n};\nconst _toRad = deg => deg * (Math.PI / 180.0);\nconst _divide = count => {\n  var deg = 360 / count;\n  return Array(count).fill(\"a\").map((_, i) => i * deg);\n};\nconst _randomDoubleGenerator = s => {\n  var mask = 0xffffffff;\n  var m_w = 123456789 + s & mask;\n  var m_z = 987654321 - s & mask;\n  return function () {\n    m_z = 36969 * (m_z & 65535) + (m_z >>> 16) & mask;\n    m_w = 18000 * (m_w & 65535) + (m_w >>> 16) & mask;\n    var result = (m_z << 16) + (m_w & 65535) >>> 0;\n    result /= 4294967296;\n    return result;\n  };\n};\nconst _magicPoint = (value, min, max) => {\n  let radius = min + value * (max - min);\n  if (radius > max) {\n    radius = radius - min;\n  } else if (radius < min) {\n    radius = radius + min;\n  }\n  return radius;\n};\nconst _point = (origin, radius, degree) => {\n  var x = origin + radius * Math.cos(_toRad(degree));\n  var y = origin + radius * Math.sin(_toRad(degree));\n  return [Math.round(x), Math.round(y)];\n};\nconst _shuffle = array => {\n  array.sort(() => Math.random() - 0.5);\n  return array;\n};\nconst _createPoints = (size, minGrowth, edgesCount, seed) => {\n  let outerRad = size;\n  let innerRad = minGrowth * (outerRad / 5);\n  let center = 0;\n  let slices = _divide(edgesCount);\n  let maxRandomValue = _shuffle([99, 999, 9999, 99999, 999999])[0];\n  let id = Math.floor(Math.random() * maxRandomValue);\n  let seedValue = seed || id;\n  let randVal = _randomDoubleGenerator(seedValue);\n  let destPoints = [];\n  slices.forEach(degree => {\n    let O = _magicPoint(randVal(), innerRad, outerRad);\n    let end = _point(center, O, degree);\n    destPoints.push(end);\n  });\n  return {\n    destPoints,\n    seedValue\n  };\n};\nconst _createSvgPath = points => {\n  let svgPath = \"\";\n  var mid = [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n  svgPath += \"M\" + mid[0] + \",\" + mid[1];\n  for (var i = 0; i < points.length; i++) {\n    var p1 = points[(i + 1) % points.length];\n    var p2 = points[(i + 2) % points.length];\n    mid = [(p1[0] + p2[0]) / 2, (p1[1] + p2[1]) / 2];\n    svgPath += \"Q\" + p1[0] + \",\" + p1[1] + \",\" + mid[0] + \",\" + mid[1];\n  }\n  svgPath += \"Z\";\n  return svgPath;\n};\nfunction CreatureImg(props) {\n  _s();\n  const [path, setPath] = useState(generator(50, props.name.length * 5, props.name.length * 5).path);\n  const [color1, setColor1] = useState(random_rgba());\n  const [color2, setColor2] = useState(random_rgba());\n  console.log(props);\n  console.log(game_data);\n  console.log(game_data.creatures[props.name]);\n  console.log(generator().path);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"200px\",\n    height: \"200px\",\n    id: \"sw-js-blob-svg\",\n    viewBox: \"0 0 100 100\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    version: \"1.1\",\n    children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n      children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n        id: \"sw-gradient\" + props.name,\n        x1: \"0\",\n        x2: \"1\",\n        y1: \"1\",\n        y2: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n          id: \"stop1\",\n          stopColor: color1,\n          offset: \"0%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n          id: \"stop2\",\n          stopColor: color2,\n          offset: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      fill: \"url(#sw-gradient\" + props.name + \")\",\n      d: path,\n      transform: \"translate(50 50)\",\n      strokeWidth: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"30\",\n      cy: \"30\",\n      r: \"2\",\n      stroke: \"black\",\n      \"stroke-width\": \"3\",\n      fill: \"red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatureImg, \"VO4H70e5D3vaK4XwDf6bnxYbDrA=\");\n_c = CreatureImg;\nexport default CreatureImg;\nvar _c;\n$RefreshReg$(_c, \"CreatureImg\");","map":{"version":3,"names":["game_data","React","useState","random_rgba","o","Math","round","r","random","s","toFixed","generator","size","growth","edges","seed","destPoints","seedValue","_createPoints","path","_createSvgPath","_toRad","deg","PI","_divide","count","Array","fill","map","_","i","_randomDoubleGenerator","mask","m_w","m_z","result","_magicPoint","value","min","max","radius","_point","origin","degree","x","cos","y","sin","_shuffle","array","sort","minGrowth","edgesCount","outerRad","innerRad","center","slices","maxRandomValue","id","floor","randVal","forEach","O","end","push","points","svgPath","mid","length","p1","p2","CreatureImg","props","setPath","name","color1","setColor1","color2","setColor2","console","log","creatures"],"sources":["/Users/anna/Documents/blob-fight/src/CreatureImage.js"],"sourcesContent":["import game_data from \"./game_data.json\";\nimport './App.css';\nimport React, { useState } from 'react';\n\n\nfunction random_rgba() {\n  var o = Math.round, r = Math.random, s = 255;\n  return 'rgba(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + r().toFixed(1) + ')';\n}\n\nconst generator = ({ size = 50, growth = 2, edges = 4, seed = null } = {}) => {\n  var { destPoints, seedValue } = _createPoints(size, growth, edges, seed);\n  var path = _createSvgPath(destPoints);\n  return { path, seedValue };\n};\n\nconst _toRad = (deg) => deg * (Math.PI / 180.0);\n\nconst _divide = (count) => {\n  var deg = 360 / count;\n\n  return Array(count)\n    .fill(\"a\")\n    .map((_, i) => i * deg);\n};\n\nconst _randomDoubleGenerator = (s) => {\n  var mask = 0xffffffff;\n  var m_w = (123456789 + s) & mask;\n  var m_z = (987654321 - s) & mask;\n\n  return function () {\n    m_z = (36969 * (m_z & 65535) + (m_z >>> 16)) & mask;\n    m_w = (18000 * (m_w & 65535) + (m_w >>> 16)) & mask;\n\n    var result = ((m_z << 16) + (m_w & 65535)) >>> 0;\n    result /= 4294967296;\n    return result;\n  };\n};\n\nconst _magicPoint = (value, min, max) => {\n  let radius = min + value * (max - min);\n  if (radius > max) {\n    radius = radius - min;\n  } else if (radius < min) {\n    radius = radius + min;\n  }\n  return radius;\n};\n\nconst _point = (origin, radius, degree) => {\n  var x = origin + radius * Math.cos(_toRad(degree));\n  var y = origin + radius * Math.sin(_toRad(degree));\n  return [Math.round(x), Math.round(y)];\n};\n\nconst _shuffle = (array) => {\n  array.sort(() => Math.random() - 0.5);\n  return array;\n};\n\nconst _createPoints = (size, minGrowth, edgesCount, seed) => {\n  let outerRad = size;\n  let innerRad = minGrowth * (outerRad / 5);\n  let center = 0;\n\n  let slices = _divide(edgesCount);\n  let maxRandomValue = _shuffle([99, 999, 9999, 99999, 999999])[0];\n  let id = Math.floor(Math.random() * maxRandomValue);\n  let seedValue = seed || id;\n  let randVal = _randomDoubleGenerator(seedValue);\n  let destPoints = [];\n\n  slices.forEach((degree) => {\n    let O = _magicPoint(randVal(), innerRad, outerRad);\n    let end = _point(center, O, degree);\n    destPoints.push(end);\n  });\n  return { destPoints, seedValue };\n};\n\nconst _createSvgPath = (points) => {\n  let svgPath = \"\";\n  var mid = [\n    (points[0][0] + points[1][0]) / 2,\n    (points[0][1] + points[1][1]) / 2,\n  ];\n  svgPath += \"M\" + mid[0] + \",\" + mid[1];\n\n  for (var i = 0; i < points.length; i++) {\n    var p1 = points[(i + 1) % points.length];\n    var p2 = points[(i + 2) % points.length];\n    mid = [(p1[0] + p2[0]) / 2, (p1[1] + p2[1]) / 2];\n    svgPath += \"Q\" + p1[0] + \",\" + p1[1] + \",\" + mid[0] + \",\" + mid[1];\n  }\n  svgPath += \"Z\";\n  return svgPath;\n};\n\n\nfunction CreatureImg(props) {\n\n  const [path, setPath] = useState(generator(50, props.name.length*5, props.name.length*5).path);\n  const [color1, setColor1] = useState(random_rgba());\n  const [color2, setColor2] = useState(random_rgba());\n\n\n  console.log(props);\n  console.log(game_data);\n  console.log(game_data.creatures[props.name]);\n\n  console.log(generator().path);\n  return (\n    <svg width = \"200px\" height = \"200px\" id=\"sw-js-blob-svg\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n      <defs>                         \n        <linearGradient id={\"sw-gradient\"+props.name} x1=\"0\" x2=\"1\" y1=\"1\" y2=\"0\"> \n        <stop id=\"stop1\" stopColor={color1} offset=\"0%\"></stop>  \n        <stop id=\"stop2\" stopColor={color2} offset=\"100%\"></stop>\n        </linearGradient>\n      </defs>                \n      <path fill={\"url(#sw-gradient\"+props.name+\")\"} d={path} transform=\"translate(50 50)\" strokeWidth=\"0\"></path>\n      <circle cx=\"30\" cy=\"30\" r=\"2\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" />\n\n  </svg>\n  );\n}\n\nexport default CreatureImg;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}